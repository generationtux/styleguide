// Mixin for generating new styles
// based on bootstraps _theme.scss file
@mixin btn-styles($btn-color: #555, $border-color: $btn-default-border) {
  background-color: $btn-color;
  border-color: $border-color;
  color: $border-color;
  @include transition(all .2s ease);

  

  @if (lightness($border-color) > 80) {
    color: $gray-base;
    &:hover,
    &:focus  {
      background-color: darken($border-color,15%);
      border-color: darken($border-color,15%);
      color: $gray-base;
    }
    &:active,
    &.active,
    &:focus:active {
      background-color: desaturate( darken($border-color, 7%), 7% );
      color: white;
    }
  }
  @elseif ($btn-color == white) {
    &:hover,
    &:focus  {
      background-color: $border-color;
      border-color: $border-color;
      color: $btn-color;
    }
    &:active,
    &.active,
    &:focus:active {
      background-color: desaturate( darken($border-color, 7%), 7% );
      color: white;
    }
  }
  @elseif ($btn-color == $border-color) {
    color: white;
    &:hover,
    &:focus  {
      background-color: white;
      border-color: $btn-color;
      color: $btn-color;
    }
    &:active,
    &.active,
    &:focus:active {
      background-color: $brand-gray-lighter;
      color: $btn-color;
    }
  }
  @else {
    &:hover,
    &:focus  {
      background-color: $border-color;
      border-color: $btn-color;
      color: white;
      // @include shadow-depth(3);
    }
    &:active,
    &.active,
    &:focus:active {
      background-color: desaturate( darken($border-color, 7%), 7% );
      color: white;
    }
  }

  

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $brand-gray-lighter;
      color: black;
    }
  }
}

